install node js: curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash 
and then: nvm install node
source: https://medium.com/geekculture/how-to-install-node-js-by-nvm-61addf4ab1ba

install only node_modules: npm install

create a new react app: npm create-react-app name_of_dir

run it: npm start

run json server: npx json-server --port 3001 --watch db.json

////////////////////////////////////////////////////////////////////////////////

NODE.JS - part3

create a new template for application: npm init

add to the scripts in package.json: "start": "node index.js",

// add whatever to the index.js that is in the root of dir

run the program (2 ways): node index.js OR npm start (this second one is defined in the scripts part and it is customary to do it like that, i.e. by executing such tasks as npm scripts)

intall express library: npm install express

update dependencies: npm update

if we start working on the project on another computer, install all up-to-date dependencies of the project defined in package.json with running this command in the project's root directory: npm install

install nodemon as development dependency: npm install --save-dev nodemon

start app with nodemon: nodemon index.js
however, it is better to add a npm script for this in package.json and then strat it like this: npm run dev

spot a missing Content-Type header by printing all of the request headers: console.log(request.headers)

install morgan middleware for backend for debugging, remember to take it to use

install cors middleware to backend for connecting frontend (on port 3000) with backend (on port 3001)
remember to take cors to use

do deployment on heroku: https://devcenter.heroku.com/articles/getting-started-with-nodejs
add a file called Procfile to the backend project's root to tell Heroku how to start the application: web: node index.js
create a Git repository in the project directory (have the project directory as a NON-GIT REPO): git init
add .gitignore with the following contents: node_modules
install the Heroku package: npm install -g heroku
create a Heroku application: heroku create
commit your code to the repository and move it to Heroku: git push heroku main !!! => is this command doe s not work, use git push heroku HEAD:master OR git push heroku HEAD:main --force

after deploying the app, create a production build (i.e. eploy frontend to the Internet):
- in the root of the frontend project, run: npm run build (this creates a build dir)
- while in the frontend dir in terminal, copy the build dir to backend of the app: cp -r build ../notes-backend
- use express' built-in middleware called static in order for express to show the static content (JS, index.html, etc)




